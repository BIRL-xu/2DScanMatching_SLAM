function [mind pret index] = p2lAssociation(snew, sref, Br)
%P2LASSOCIATION Point to line association. Tries to associate every point
%of SNEW to one in SREF. A point in SREF is chosen using a point to line
%metric, ie calculating the orthogonal distance beteween a point in SNEW
%and a line formed by consecutive points in the model SREF

pset = sref.cart;
local = sref.polar;

pa = snew.cart;



%DEBUG

figure;
hold on
axis equal
grid on
displayPoints(pset,'g',0);
displayPoints(pa,'r',0);

pret = [];
index = [];
errtot = 0;

for i = 2:size(pset,1)
   p2 = pset(i-1,1:2); %Adjacent points in the reference scan
   p3 = pset(i,1:2);
   [m q] = pts2lineSI(p2,p3);   
   linset = [lineset; m q];
end

for j = 1:size(pa,1)
    
    p = pa(j,1:2);
    a = pa(j,3);
    
    
    infd = inf;
    mind = 0;
    indexf = -1;
    pf = [];
    
    for i = 2:size(pset,1)
        %[ap lp] = cart2pol(pset(i,1),pset(i,2));
        ap = local(i,1);
        w = abs(ap-a); %normAngle(abs(ap-a)); %angular shift
        
        % Maximum rotation check
        %         if Br > 0 && w > Br
        %             continue;
        %         end
        
        p2 = pset(i-1,1:2); %Adjacent points in the reference scan
        p3 = pset(i,1:2);

dff = ip - p2;
d1 = sqrt(dff(1)^2 +dff(2)^2);

dff = ip - p3;
d2 = sqrt(dff(1)^2 +dff(2)^2);
        %interpolate the points and find the segment distance from p
        %[d P] = pt2lineDistance(p(1:2),p2(1:2),p3(1:2));
        d = pt2lineSIDistance(p(1:2),p2(1:2),p3(1:2));
        % classic Euler Distance
        %d = sqrt( (p(1)-p2(1))^2 + (p(2)-p2(2))^2 );
        
        %we select the point with minor distance
        if d < infd
            infd = d;
            mind = infd;
            pf =  p2;
            indexf = i;
        end
        
    end
    pret = [pret; pf];
    index = [index; indexf];
    errtot = errtot + mind;
    
    
    %DEBUG
    plot( [p(1) pf(1) ],[p(2) pf(2) ], 'm' )
end

if size(pret,1) < 3
    error(' Not enough associations fuond' );
end


mind = mean(errtot);

end

