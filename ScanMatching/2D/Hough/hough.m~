function [ R t ] = hough( ScanRef, ScanNew, motion, Opt )
%HOUGH Uses the hough trasnform to detect the displacement as proposed in
%the paper

% A. Censi, L. Iocchi, G. Grisetti  -
% Scan Matching in the Hough Domain (PDF), presented at ICRA 2005.

%Calculate the motion parameters
u = motion.con.u;
pose = motion.frame.t;
lrangle = u(2);
x0 =  cos(lrangle)*u(1);
y0 =  sin(lrangle)*u(1);
yaw0 = u(3);

x=x0;
y=y0;
yaw=yaw0;

rTn = [cos(yaw) -sin(yaw) x; sin(yaw) cos(yaw) y; 0 0 1];

% B referenced to A coordinate system
for i = 1:sizeB
    B.cart(i,1:3) = (rTn*[B.cart(i,1:2) 1]')' ;
    th = normAngle(B.polar(i,1) + yaw);
    ro = B.polar(i,2);
    rc = cos(th)*ro + x;
    rs = sin(th)*ro + y;
    
    B.polar(i,2) = sqrt(rc^2 + rs^2);
    B.polar(i,1) = atan2(rs,rc);
end

B.cart(:,3) =  pose(3); % Delete 1's from normalized 2D point


% Make the occupancy grid as big as to contain both scans
[PARAM.xmin PARAM.xmax PARAM.ymin PARAM.ymax] = minmaxScan(ScanRef);
[PARAMN.xmin PARAMN.xmax PARAMN.ymin PARAMN.ymax] = minmaxScan(ScanNew);
PARAM.L = 0.5;  %Occupancy resolution
PARAM.type = 'binary';
PARAM.xmin = min(PARAM.xmin, PARAMN.xmin) - 1;
PARAM.xmax = max(PARAM.xmax, PARAMN.xmax) + 1;
PARAM.ymin = min(PARAM.ymin, PARAMN.ymin) - 1;
PARAM.ymax = max(PARAM.ymax, PARAMN.ymax) + 1;

Occ = makeOccupancyGrid(ScanRef, PARAM);

% Make the occupancy grid as big as to contain both scans
[PARAM.xmin PARAM.xmax PARAM.ymin PARAM.ymax] = minmaxScan(ScanRef);
[PARAMN.xmin PARAMN.xmax PARAMN.ymin PARAMN.ymax] = minmaxScan(ScanNew);
PARAM.L = 0.5;  %Occupancy resolution
PARAM.type = 'binary';
PARAM.xmin = min(PARAM.xmin, PARAMN.xmin) - 1;
PARAM.xmax = max(PARAM.xmax, PARAMN.xmax) + 1;
PARAM.ymin = min(PARAM.ymin, PARAMN.ymin) - 1;
PARAM.ymax = max(PARAM.ymax, PARAMN.ymax) + 1;

Occ = makeOccupancyGrid(ScanRef, PARAM);


end

