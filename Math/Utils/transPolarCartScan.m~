function [ B Bf Af aixs bixs] = transPolarCartScan( Bl, Al, R, t, dir, threshold )
%TRANSPOLARCARTSCAN Summary of this function goes here
%   Detailed explanation goes here
% B referenced to A coordinate system

x = t(1);
y = t(2);
yaw = R;

%Bf = Bl;
Af = Al;

aixs=[];
bixs=[];
bixs2=[];
diffbixs = [];
diffbixs2 = [];
threshold = threshold * 1.5;

global Opt;

irtn = inverse_transformation([x y yaw]);
irTn = [cos(irtn(3)) -sin(irtn(3)) irtn(1); sin(irtn(3)) cos(irtn(3)) irtn(2); 0 0 1];

for i = 1:size(Al.cart,1)
    tmpc = (irTn*[Al.cart(i,1:2) 1]')' ;
    [Ab.polar(i,1) Ab.polar(i,2)] = cart2pol(tmpc(1), tmpc(2));
end

switch(dir)
    
    case 1
        
        rTn = [cos(yaw) -sin(yaw) x; sin(yaw) cos(yaw) y; 0 0 1];
        
        sizeB = size(Bl.cart,1);
        
        %B referenced to A coordinate system
        for i = 1:sizeB
            B.cart(i,1:3) = (rTn*[Bl.cart(i,1:2) 1]')' ;
            %B.polar(i,1:2) = [normAngle(B.polar(i,1) + yaw) B.polar(i,2)];
            th = normAngle(Bl.polar(i,1) + yaw);
            ro = Bl.polar(i,2);
            rc = cos(th)*ro + x;
            rs = sin(th)*ro + y;
            
            B.polar(i,2) = sqrt(rc^2 + rs^2);
            B.polar(i,1) = atan2(rs,rc);
            
            %             bp1 = [x y];
            %             bp2 = B.cart(i,:);
            
            %% Search for occluded points from the reference pose
            for rp =1:size(Al.polar,1)
                
                %                 ap1 = Al.cart(rp,:);
                %                 ap2 = Al.cart(rp-1,:);
                
                %[sint p di ] = segseginter(bp1,bp2,ap1,ap2);
                dangle = abs( normAngle(Al.polar(rp,1) - B.polar(i,1)) );
                
                if( isempty(find(aixs==rp,1)) && dangle < 0.05 )
                    %if di > threshold
                    %if abs(Af.polar(rp,2) - B.polar(i,2) ) > threshold
                    if(Af.polar(rp,2) > B.polar(i,2) )
                        
                    else
                        bixs = [bixs; i];
                        diffbixs = [diffbixs; Af.polar(rp,2) - B.polar(i,2)];
                        break
                    end
                    %else
                    
                    %end
                end
            end
            
            
            
            %% Search for occluded points from the new pose
            for rp =1:size(Ab.polar,1)
                
                dangle = abs( normAngle(Ab.polar(rp,1) - Bl.polar(i,1)) );
                
                if( isempty(find(aixs==rp,1)) && dangle < 0.05 )
                    %if abs(Ab.polar(rp,2) - Bl.polar(i,2) ) > threshold
                    
                    
                    if(Ab.polar(rp,2) > Bl.polar(i,2) )
                        bixs2=[bixs2 i];
                        %
                        %                             ibixs = find(bixs==i,1);
                        diffbixs2 =  Ab.polar(rp,2) - Bl.polar(i,2) ;
                        
                        %                             if ~isempty(ibixs)
                        %                                 %if sign(diffbixs2) == sign(diffbixs(ibixs))
                        %                                     bixs2 = [bixs2; i ];
                        %                                    % diffbixs2(end) = [];
                        %                                 %end
                        %                             end
                        break
                    else
                        %
                        % %                             ibixs = find(bixs==i,1);
                        % %                             diffbixs2 =  Ab.polar(rp,2) - Bl.polar(i,2) ;
                        % %
                        % %                             if ~isempty(ibixs)
                        % %                                 if sign(diffbixs2) == sign(diffbixs(ibixs))
                        % %                                     bixs2(end) = [];
                        % %                                    % diffbixs2(end) = [];
                        % %                                 end
                        % %                             end
                    end
                    %else
                    
                    %end
                end
            end
            
            
            
        end
%         diffbixs2 = abs(diffbixs2);
%         bixs2(diffbixs2<threshold) = [];
        
        [cixs] = intersect(bixs,bixs2);
        %diffbixs = diffbixs(inbx);
        
        diffbixs = abs(diffbixs);
        bixs(diffbixs<threshold) = [];

        [bixs ] = union(bixs,cixs);
        
        %bixs = union(bixs2,bixs);
        
        %         for i = 1:size(Al.polar,1)
        %             if isempty(find(bixs == i, 1))
        %                 for j = 1:size(B.polar,1)
        %                     if   abs(normAngle(B.polar(j,1)) - B.polar(i,1)) < 0.001 && i~=j
        %                         [mm ii] = min( [ B.polar(j,2) B.polar(i,2) ]);
        %                         oi = j;
        %                         if ii == 2
        %                             oi = i;
        %                         end
        %                         bixs = [bixs; oi];
        %                         continue;
        %                     end
        %                 end
        %             end
        %         end
        
        Bf=B;
        Bf.cart(bixs,:)= [];
        Bf.polar(bixs,:)= [];
        Af.cart(aixs,:)= [];
        Af.polar(aixs,:)= [];
        
    case 2
        
        rTn = [cos(yaw) -sin(yaw) x; sin(yaw) cos(yaw) y; 0 0 1];
        
        sizeB = size(Bl.cart,2);
        
        for i = 1:sizeB
            B.cart(1:3,i) = (rTn*[Bl.cart(1:2,i); 1]) ;
            th = normAngle(Bl.polar(1,i) + yaw);
            ro = Bl.polar(2,i);
            rc = cos(th)*ro + x;
            rs = sin(th)*ro + y;
            
            B.polar(2,i) = sqrt(rc^2 + rs^2);
            B.polar(1,i) = atan2(rs,rc);
            
            mthreshold = 1;
            for rp =1:size(Al.polar,2)
                if( isempty(find(aixs==rp,1)) && abs(normAngle(Al.polar(1,rp)) - B.polar(1,i)) < 0.05 )
                    if abs(Af.polar(2,rp) - B.polar(2,i) ) > threshold
                        if(Af.polar(2,rp) > B.polar(2,i) )
                        else
                            mthreshold = 1*mthreshold;
                        end
                    else
                        mthreshold = 0;
                    end
                end
            end
            if mthreshold
                bixs = [bixs; i];
            end
        end
        
        for i = 1:size(B.polar,2)
            if isempty(find(bixs == i, 1))
                for j = 1:size(B.polar,2)
                    if   abs(normAngle(B.polar(1,j)) - B.polar(1,i)) < 0.001 && i~=j
                        [mm ii] = min( [ B.polar(2,j) B.polar(2,i) ]);
                        oi = j;
                        if ii == 2
                            oi = i;
                        end
                        bixs = [bixs; oi];
                        continue;
                    end
                end
            end
        end
        
        Bf=B;
        Bf.cart(:,bixs)= [];
        Bf.polar(:,bixs)= [];
        Af.cart(:,aixs)= [];
        Af.polar(:,aixs)= [];
end


