%Simone Zandara @ VICOROB
% 2D SLAM Simulator for ScanMatching configuration file.

input_traj = 1;

% Options
global Opt;
global DEBUG;

% single algorithm debug option
DEBUG = struct(...
    'p2lAssociation',0,...
    'cpAssociation',0,...
    'mpAssociation',0,...
    'mbAssociation',0,...
    'mahaAssociation',0,...
    'normAssociation',0,...
    'gmapping',0,...
    'montecarlo',0,...
    'ga',0,...
    'houghSM',0,...
    'fmtsm',0,...
    'NDT',0,...
    'lf_sog',0,...
    'ahsm',0,...
    'all',1);

Opt = struct(...
    ...% Map parameters
    'map',              struct(...    % options for the map
    'type', 'occgrid',...             % type of map. only occgrid
    'size',        1000,...
    'resolution', 4,...             % cell size
    'realdata','../Input/Marina/sonar_marina_proc'),...        %real data input
    ...
    ...% Plot
    'plot',           struct(...
    'figure',[],...
    'ground_truth', 1, 'ground_truth_h', [],'ground_truth_h_rob', [] , 'ground_truth_data', [],...   %Plot Ground Truth ?
    'corrected', 1, 'corrected_h', [],'corrected_h_rob', [] , 'corrected_data', [],...            %Plot Corrected Pose ?
    'dead_reckoning', 1, 'dead_reckoning_h', [] ,'dead_reckoning_h_rob',[], 'dead_reckoning_data', [], ... %Plot Dead Reckoning Pose ?
    'correction_uncertainty',0,'correction_uncertainty_h',[],...
    'points_gt',1, 'points_gt_h',[],...%Plot Ground Truth points ?
    'points_dr',1, 'points_dr_h',[],...%Plot DeadReckoning points ?
    'points_cr',1, 'points_cr_h',[],...%Plot Corrected points ?
    'robot_display_n',1,...
    'robot_scale',0.1),...
    ...% Randomizer parameters
    'random',           struct(...      % random generator options
    'newSeed',        true,...         % select new random seed?
    'fixedSeed',      215264,...            % random seed for non-random runs
    'seed',           [] ),...
    ...
    ...% Stochastic Filter
    'filter', struct(...
    'usefilter',1,...
    'type','ekf2d'...
    ),...
    ...% Scan matcher parameters
    'scanmatcher', struct(...
    'usematcher',1,...
    'motionamount', 0.0,...             % amount of motion after which performing scan matching
    'distancethreshold', 1,...          % NOT USED
    ...% Possible values: icp, IDC, 
    ...% pIC,MbICP,ga,gmapping,montecarlo,ahsm,fmtsm,houghSM,NDT,lf_sog, icpbSM.
    'handle', @icp,...              % scan matching algorithm in use
    ...
    ...% If using mixed algorithm 'icpbSM', you have to fill the next two with function handles.
    ...% Possible values: mahaAssociation (mahalanobis distance), mbAssociation (metric based ), cpAssociation (closest Point)
    ...% p2lAssociation (point to line),normAssociation (normal lines association). mpAssociation (range based association)
    'associate', @mahaAssociation,...   % association function
    ...
    ...% Possible Values: regist_besl (Besley Unit Vector), register_martinez (Closed form Least Square)
    ...% register_matlab (MATLAB minimization), registerSVD (Singular Value Decomposition), registerCensi (Censi's Lagrange Multiplier)
    'register', @ga,...        % registration function
    ...
    'rejection_rule',[],...             % handle to rejection rule if wanted: only X84 available
    'projfilter', 0,...                 % use projection filter ?
    'iterations', 50,...                % max number of iterations
    'Br', [0.1 0.5], ...                % angular and radial trehshold used by algorithms
    'convalue', 0.00001,...             % below this value the result is acceptable
    'niterconv', 3,...                  % minimum number of iterations before convergence check
    'chival', chi2inv(0.95,0.1)),...    % tolerance value, different applications
    ...
    ...%Scan forming parameters
    'scan', struct(...                  % minimum number of points before scan composition
    'maxscanpoints', 1),...
    ...
    ...%Error parameters
    'error', struct(...
    'display_result',1 )...            % show result?
    );



% Random generator
if Opt.random.newSeed
    Opt.random.seed = sum(100*clock);
    randn('seed',Opt.random.seed);
    rand('seed',Opt.random.seed);
    fprintf('Random seed: %6.0f.\n',Opt.random.seed)
    disp('To repeat this run, edit userData.m,')
    disp('   add this seed to SimOpt.random.fixedSeed,')
    disp('   and set SimOpt.random.newSeed to false.')
else
    Opt.random.seed = Opt.random.fixedSeed;
    randn('seed',Opt.random.seed);
    rand('seed',Opt.random.seed);
    fprintf('Fixed random seed: %6.0f.\n',Opt.random.seed)
    disp('To make further runs truly random, edit userData.m,')
    disp('   and set SimOpt.random.newSeed to true.')
end

if ~input_traj
    
    trajr =[0,  0.2,    0.3;...     % x
        0,  0.0,    0.5;...         % y
        0,  0,      0;...           % 0
        0,  0,      0;...           % 0
        0,  0,      0;...           % 0   
        0.2 ,0.4,   0.6];           % theta
    
    world = wall_generator(0.1);
    random_world= world.POLYGON';
    
else
    
    world = wall_generator(0.1,1);
    random_world= world.POLYGON';
    trajr = world.TRAJ;
end




Time = struct(...
    'dt',                   .1,...          % sampling time, seconds
    'firstFrame',           1,...           % first frame #
    'lastFrame',            size(trajr,2),...
    'currentFrame', 1,...
    'step',1);

%World information
RealWorld = struct(...
    'xMin',             min(random_world(1,:)),...         % playground limits
    'xMax',             max(random_world(1,:)),...
    'yMin',             min(random_world(2,:)),...
    'yMax',             max(random_world(2,:)),...
    'zMin',             -20,...
    'zMax',             20,...
    'points',           [],...
    'segments',         random_world,...
    'surface', []);
